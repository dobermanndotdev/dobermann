openapi: 3.0.3
info:
  title: doberman
  description: doberman
  termsOfService: https://github.com/flowck/doberman
  contact:
    email: firmino.changani@gmail.com
  license:
    name: MIT
    url: https://github.com/flowck/doberman/LICENSE.md
  version: 0.0.1
externalDocs:
  description: https://github.com/flowck/doberman/README.md
  url: https://github.com/flowck/doberman
servers:
  - url: http://localhost:8080
paths:
  /accounts:
    post:
      tags:
        - Accounts
      operationId: createAnAccount
      summary: Create an account
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAnAccountRequest'
      responses:
        '201':
          description: CREATED
        default:
          $ref: '#/components/responses/DefaultError'
  /accounts/confirm/{confirmationCode}:
    post:
      tags:
        - Accounts
      operationId: confirmAccount
      summary: Confirm account
      parameters:
        - name: confirmationCode
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: CONFIRMED
        default:
          $ref: '#/components/responses/DefaultError'
  /monitors:
    post:
      tags:
        - Monitor
      operationId: createMonitor
      summary: Create a monitor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateMonitorRequest'
      responses:
        '201':
          description: CREATED
        default:
          $ref: '#/components/responses/DefaultError'
components:
  schemas:
    CreateAnAccountRequest:
      required: [ account_name, first_name, last_name, email, password ]
      properties:
        account_name:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        password:
          type: string
    CreateMonitorRequest:
      required: [endpoint, alert_triggers, on_call_escalation]
      properties:
        endpoint:
          type: string
        alert_triggers:
          type: array
          items:
            type: string
        on_call_escalation:
          $ref: '#/components/schemas/OnCallEscalation'
    OnCallEscalation:
      required: [team_members_to_be_notified, notification_methods]
      properties:
        team_members_to_be_notified:
          type: array
          items:
            type: string
        notification_methods:
          type: array
          items:
            type: string
    GenericResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    ErrorResponse:
      type: object
      required: [error, message]
      properties:
        message:
          type: string
          description: A description about the error
        error:
          type: string
          description: Error custom error code such as 'email_in_use'
  responses:
    UnauthorizedError:
      description: 'Usually causes by an authentication token missing'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    DefaultSuccess:
      description: 'Default message when an operation succeeds'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GenericResponse'
    DefaultError:
      description: 'A generic error response'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    SdkKey:
      type: apiKey
      name: X-SDK-KEY
      in: header
    SessionID:
      type: apiKey
      name: X-SESSION-ID
      in: header